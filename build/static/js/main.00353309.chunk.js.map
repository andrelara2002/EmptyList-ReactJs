{"version":3,"sources":["images/empty-list-logo.svg","components/Body/index.js","components/Header/index.js","components/Footer/index.js","App.js","index.js"],"names":["Body","props","checkCommand","valueComparable","document","getElementById","value","commands","data","map","idx","console","log","nome","descrição","confirm","localStorage","clear","setState","insertLists","window","location","reload","state_","state","localdata","saveToStorage","alert","deleteElement","num","numero","copy_state","listas","description","splice","insertTaskOnList","copy_item","input_value","push","getDescriptions","className","id","onChange","changeText","type","selectTask","toString","onClick","stringScratch","lenght","slice","task","input_","checked","style","textDecoration","deleteList","rows","cols","resize","name","changeTitle","placeholder","text","setItem","JSON","stringify","downloadFile","myData","json","blob","Blob","href","URL","createObjectURL","link","createElement","download","fileName","body","appendChild","click","removeChild","setDataFromJson","file","files","reader","FileReader","onload","readAsText","parse","getItem","dia_atual","list_names","command_check","this","listElement","concat","src","logo","insertElementOnList","Component","Header","Footer","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.00353309.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/empty-list-logo.9e225961.svg\";","import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\nimport '../../style.css'\r\nimport logo from '../../images/empty-list-logo.svg'\r\nimport localdata from '../../service/localdata/my_notes_-_empty_list.json'\r\nimport commands from '../../service/localdata/commands.json'\r\n//https://api.github.com/users/andrelara2002/repos\r\nclass Body extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = JSON.parse(\r\n      localStorage.getItem(\"empty_list_full_reactjs\")\r\n    ) || {\r\n      dia_atual: null,\r\n      list_names: [],\r\n      listas: [\r\n        {\r\n          name: \"Esta é uma lista\",\r\n          description: [\"Exclua ela para começar!\"]\r\n        }\r\n      ]\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() { }\r\n\r\n  insertElementOnList() {\r\n    let nome = document.getElementById(\"create_input\").value;\r\n    let command_check = this.checkCommand(nome)\r\n\r\n\r\n    if (nome != \"\" && command_check === false) {\r\n      let listElement = {\r\n        name: nome,\r\n        description: []\r\n      };\r\n      this.setState(\r\n        {\r\n          listas: this.state.listas.concat(listElement)\r\n        },\r\n        () => {\r\n          this.insertLists();\r\n          document.getElementById(\"create_input\").value = \"\";\r\n          this.saveToStorage();\r\n        }\r\n      );\r\n    } else if (nome === \"\" && command_check === false) {\r\n      alert(\"Insira um Nome para a Lista\");\r\n    }\r\n  }\r\n\r\n  checkCommand = valueComparable => {\r\n    document.getElementById(\"create_input\").value = \"\";\r\n\r\n    switch (valueComparable) {\r\n      case \"--help\":\r\n        commands.data.map((value, idx) => {\r\n          console.log(value.nome + \": \" + value.descrição)\r\n        })\r\n\r\n        return true;\r\n        break;\r\n\r\n      case \"--delete-lists\":\r\n        let autorizacao_delete = confirm(\"Deseja realmente apagar suas anotações?\");\r\n        if (autorizacao_delete === true) {\r\n          localStorage.clear()\r\n\r\n          this.setState({}, () => {\r\n            this.insertLists()\r\n            window.location.reload(true);\r\n          })\r\n        }\r\n        return true;\r\n        break;\r\n\r\n      case \"--get-from-localdata\":\r\n        let autorizacao_localdata = confirm(\"Cuidado! Você está sobreescrevendo seus dados na nuvem, só faça isso em ambiente de desenvolvimento\");\r\n\r\n        if (autorizacao_localdata === true) {\r\n          let state_ = this.state;\r\n          state_ = localdata;\r\n\r\n          this.setState(state_, () => {\r\n\r\n            this.insertLists();\r\n            document.getElementById(\"create_input\").value = \"\";\r\n            this.saveToStorage();\r\n          })\r\n        }\r\n        else {\r\n          alert(\"Cancelado\")\r\n        }\r\n        return true;\r\n        break;\r\n\r\n        case \"--clear-localstorage\":\r\n          let autorizacao_clearstorage = confirm('Atenção! Você está prestes a apagar todos os seus dados do armazenamento, deseja fazer isso?')\r\n\r\n          if(autorizacao_clearstorage === true){\r\n            localStorage.clear();\r\n            alert(\"Armazenamento apagado\");\r\n          }\r\n        \r\n        default:\r\n        return false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  deleteElement = (num, numero) => {\r\n    let copy_state = this.state;\r\n\r\n    copy_state.listas[numero].description.splice(num, 1);\r\n    this.setState(\r\n      {\r\n        listas: copy_state.listas\r\n      },\r\n      () => {\r\n        this.saveToStorage();\r\n      }\r\n    );\r\n  };\r\n\r\n  insertTaskOnList = num => {\r\n    let copy_state = this.state;\r\n    let copy_item = this.state.listas[num.idx];\r\n    let input_value = document.getElementById(`input${num.idx}`);\r\n\r\n    copy_item.description.push(input_value.value);\r\n    copy_state.listas[num.idx].description = copy_item.description;\r\n\r\n    this.setState(\r\n      {\r\n        listas: copy_state.listas\r\n      },\r\n      () => {\r\n        this.saveToStorage();\r\n        input_value.value = \"\";\r\n      }\r\n    );\r\n  };\r\n\r\n  getDescriptions = numero => {\r\n    return this.state.listas[numero].description.map((value, idx) => {\r\n      return (\r\n        <p className=\"list_inside_element\" id={\"task\" + numero + idx}>\r\n          <textarea id={'task-title' + numero + idx} value={value} onChange={() => { this.changeText(idx, numero) }} className='task-input' />\r\n          <input className=\"checkbox\" id={\"checkbox\" + numero + idx} type=\"checkbox\" onChange={() => { this.selectTask(numero.toString() + idx.toString()) }} />\r\n          <button\r\n            onClick={() => {\r\n              this.deleteElement(idx, numero);\r\n            }}\r\n          >\r\n            x\r\n          </button>\r\n        </p>\r\n      );\r\n    });\r\n  };\r\n\r\n  stringScratch = value => {\r\n    if (value.lenght > 10) {\r\n      let value_ = value.lenght / 10;\r\n      value.slice()\r\n    }\r\n  }\r\n\r\n  selectTask = task => {\r\n    let input_ = document.getElementById(\"task-title\" + task);\r\n    let checkbox_ = document.getElementById(\"checkbox\" + task);\r\n\r\n    if (checkbox_.checked === false) {\r\n      input_.style.textDecoration = 'none';\r\n    }\r\n    else {\r\n      input_.style.textDecoration = 'line-through';\r\n    }\r\n  }\r\n\r\n  deleteList = num => {\r\n    let copy_state = this.state;\r\n    copy_state.listas.splice(num.idx, 1);\r\n\r\n    this.setState(\r\n      {\r\n        listas: copy_state.listas\r\n      },\r\n      () => {\r\n        this.saveToStorage();\r\n      }\r\n    );\r\n  };\r\n\r\n  insertLists = () => {\r\n    return this.state.listas.map((value, idx) => {\r\n      return (\r\n        <li className=\"list_inside\" key={value + idx}>\r\n          <textarea rows='2' cols='30' style={{ resize: \"none\" }} className='title-input' value={value.name} id={'title-input' + idx} onChange={() => { this.changeTitle(idx) }} />\r\n          <p>{this.getDescriptions(idx)}</p>\r\n          <div className=\"input_task_session\">\r\n            <input id={`input${idx}`} placeholder=\"Insira uma nota\" />\r\n            <button\r\n              onClick={() => {\r\n                this.insertTaskOnList({ idx });\r\n              }}\r\n            >\r\n              Adicionar\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.deleteList({ idx });\r\n              }}\r\n            >\r\n              Deletar\r\n            </button>\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  changeTitle = idx => {\r\n    let state_ = this.state\r\n    let text = document.getElementById('title-input' + idx).value\r\n\r\n    state_.listas[idx].name = text\r\n    this.setState(state_, () => { this.saveToStorage() })\r\n  }\r\n\r\n  changeText = (idx, numero) => {\r\n    let state_ = this.state\r\n    let text = document.getElementById('task-title' + numero + idx).value\r\n\r\n    state_.listas[numero].description[idx] = text\r\n    this.setState(state_, () => {\r\n      this.saveToStorage()\r\n    })\r\n  }\r\n\r\n\r\n\r\n  saveToStorage = () => {\r\n    localStorage.clear()\r\n    localStorage.setItem(\"empty_list_full_reactjs\", JSON.stringify(this.state));\r\n  };\r\n\r\n  downloadFile = () => {\r\n    const myData = this.state;\r\n\r\n    const fileName = \"my_notes_-_empty_list\";\r\n    const json = JSON.stringify(myData);\r\n    const blob = new Blob([json], { type: \"application/json\" });\r\n    const href = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.href = href;\r\n    link.download = fileName + \".json\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  setDataFromJson = value => {\r\n    let copy_state = this.state;\r\n\r\n    var files = value.files;\r\n    var file = files[0];\r\n\r\n    if (!file) return;\r\n\r\n    var reader = new FileReader();\r\n    reader.onload = function () { };\r\n\r\n    let redero = reader.readAsText(file);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <div className='major-input'>\r\n          <img src={logo} />\r\n          <div className='minor-input'>\r\n            <div className=\"input_div\">\r\n              <h2>TITULO</h2>\r\n              <input id=\"create_input\" placeholder=\"Insira o título de sua lista\" />\r\n            </div>\r\n            <button\r\n              className=\"full_button\"\r\n              onClick={() => {\r\n                this.insertElementOnList();\r\n              }}\r\n            >\r\n              CRIAR LISTA\r\n        </button>\r\n          </div>\r\n        </div>\r\n        <ul>{this.insertLists()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React, { Component } from \"react\";\r\nimport Body from \"../Body/index.js\";\r\n\r\nimport \"./styles.css\";\r\nimport '../../style.css'\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header_image\">\r\n        <button\r\n          onClick={() => {\r\n            let bodyElement = new Body();\r\n            bodyElement.downloadFile();\r\n          }}\r\n        >\r\n          Baixar Listas\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import react, { Component } from 'react';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <p>Criado por <strong>André Lara</strong></p>\r\n            </footer>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport Body from \"./components/Body/index.js\";\r\nimport Header from \"./components/Header/index.js\";\r\nimport Footer from './components/Footer/index'\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className='app'>\r\n      <Header/>\r\n      <Body />\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}